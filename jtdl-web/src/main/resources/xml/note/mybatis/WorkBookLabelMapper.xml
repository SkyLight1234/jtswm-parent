<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zdpzsp.note.bo.WorkBookLabelMapper" >
  <resultMap id="BaseResultMap" type="com.zdpzsp.note.bo.WorkBookLabel" >
    <id column="wb_lable_id" property="wb_lable_id" jdbcType="BIGINT" />
    <result column="user_id" property="user_id" jdbcType="BIGINT" />
    <result column="parent_id" property="parent_id" jdbcType="BIGINT" />
    <result column="label_name" property="label_name" jdbcType="VARCHAR" />
    <result column="label_remark" property="label_remark" jdbcType="VARCHAR" />
    <result column="res_id" property="res_id" jdbcType="BIGINT" />
    <result column="is_file" property="is_file" jdbcType="INTEGER" />
    <result column="create_at" property="create_at" jdbcType="BIGINT" />
    <result column="create_id" property="create_id" jdbcType="BIGINT" />
    <result column="update_at" property="update_at" jdbcType="BIGINT" />
    <result column="update_id" property="update_id" jdbcType="BIGINT" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    wb_lable_id, user_id, parent_id, label_name, label_remark, res_id, is_file, create_at, 
    create_id, update_at, update_id, state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zdpzsp.note.bo.WorkBookLabelExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from work_book_label
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from work_book_label
    where wb_lable_id = #{wb_lable_id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from work_book_label
    where wb_lable_id = #{wb_lable_id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zdpzsp.note.bo.WorkBookLabelExample" >
    delete from work_book_label
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zdpzsp.note.bo.WorkBookLabel" >
    insert into work_book_label (wb_lable_id, user_id, parent_id, 
      label_name, label_remark, res_id, 
      is_file, create_at, create_id, 
      update_at, update_id, state
      )
    values (#{wb_lable_id,jdbcType=BIGINT}, #{user_id,jdbcType=BIGINT}, #{parent_id,jdbcType=BIGINT}, 
      #{label_name,jdbcType=VARCHAR}, #{label_remark,jdbcType=VARCHAR}, #{res_id,jdbcType=BIGINT}, 
      #{is_file,jdbcType=INTEGER}, #{create_at,jdbcType=BIGINT}, #{create_id,jdbcType=BIGINT}, 
      #{update_at,jdbcType=BIGINT}, #{update_id,jdbcType=BIGINT}, #{state,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zdpzsp.note.bo.WorkBookLabel" >
    insert into work_book_label
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="wb_lable_id != null" >
        wb_lable_id,
      </if>
      <if test="user_id != null" >
        user_id,
      </if>
      <if test="parent_id != null" >
        parent_id,
      </if>
      <if test="label_name != null" >
        label_name,
      </if>
      <if test="label_remark != null" >
        label_remark,
      </if>
      <if test="res_id != null" >
        res_id,
      </if>
      <if test="is_file != null" >
        is_file,
      </if>
      <if test="create_at != null" >
        create_at,
      </if>
      <if test="create_id != null" >
        create_id,
      </if>
      <if test="update_at != null" >
        update_at,
      </if>
      <if test="update_id != null" >
        update_id,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="wb_lable_id != null" >
        #{wb_lable_id,jdbcType=BIGINT},
      </if>
      <if test="user_id != null" >
        #{user_id,jdbcType=BIGINT},
      </if>
      <if test="parent_id != null" >
        #{parent_id,jdbcType=BIGINT},
      </if>
      <if test="label_name != null" >
        #{label_name,jdbcType=VARCHAR},
      </if>
      <if test="label_remark != null" >
        #{label_remark,jdbcType=VARCHAR},
      </if>
      <if test="res_id != null" >
        #{res_id,jdbcType=BIGINT},
      </if>
      <if test="is_file != null" >
        #{is_file,jdbcType=INTEGER},
      </if>
      <if test="create_at != null" >
        #{create_at,jdbcType=BIGINT},
      </if>
      <if test="create_id != null" >
        #{create_id,jdbcType=BIGINT},
      </if>
      <if test="update_at != null" >
        #{update_at,jdbcType=BIGINT},
      </if>
      <if test="update_id != null" >
        #{update_id,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zdpzsp.note.bo.WorkBookLabelExample" resultType="java.lang.Integer" >
    select count(*) from work_book_label
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update work_book_label
    <set >
      <if test="record.wb_lable_id != null" >
        wb_lable_id = #{record.wb_lable_id,jdbcType=BIGINT},
      </if>
      <if test="record.user_id != null" >
        user_id = #{record.user_id,jdbcType=BIGINT},
      </if>
      <if test="record.parent_id != null" >
        parent_id = #{record.parent_id,jdbcType=BIGINT},
      </if>
      <if test="record.label_name != null" >
        label_name = #{record.label_name,jdbcType=VARCHAR},
      </if>
      <if test="record.label_remark != null" >
        label_remark = #{record.label_remark,jdbcType=VARCHAR},
      </if>
      <if test="record.res_id != null" >
        res_id = #{record.res_id,jdbcType=BIGINT},
      </if>
      <if test="record.is_file != null" >
        is_file = #{record.is_file,jdbcType=INTEGER},
      </if>
      <if test="record.create_at != null" >
        create_at = #{record.create_at,jdbcType=BIGINT},
      </if>
      <if test="record.create_id != null" >
        create_id = #{record.create_id,jdbcType=BIGINT},
      </if>
      <if test="record.update_at != null" >
        update_at = #{record.update_at,jdbcType=BIGINT},
      </if>
      <if test="record.update_id != null" >
        update_id = #{record.update_id,jdbcType=BIGINT},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update work_book_label
    set wb_lable_id = #{record.wb_lable_id,jdbcType=BIGINT},
      user_id = #{record.user_id,jdbcType=BIGINT},
      parent_id = #{record.parent_id,jdbcType=BIGINT},
      label_name = #{record.label_name,jdbcType=VARCHAR},
      label_remark = #{record.label_remark,jdbcType=VARCHAR},
      res_id = #{record.res_id,jdbcType=BIGINT},
      is_file = #{record.is_file,jdbcType=INTEGER},
      create_at = #{record.create_at,jdbcType=BIGINT},
      create_id = #{record.create_id,jdbcType=BIGINT},
      update_at = #{record.update_at,jdbcType=BIGINT},
      update_id = #{record.update_id,jdbcType=BIGINT},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zdpzsp.note.bo.WorkBookLabel" >
    update work_book_label
    <set >
      <if test="user_id != null" >
        user_id = #{user_id,jdbcType=BIGINT},
      </if>
      <if test="parent_id != null" >
        parent_id = #{parent_id,jdbcType=BIGINT},
      </if>
      <if test="label_name != null" >
        label_name = #{label_name,jdbcType=VARCHAR},
      </if>
      <if test="label_remark != null" >
        label_remark = #{label_remark,jdbcType=VARCHAR},
      </if>
      <if test="res_id != null" >
        res_id = #{res_id,jdbcType=BIGINT},
      </if>
      <if test="is_file != null" >
        is_file = #{is_file,jdbcType=INTEGER},
      </if>
      <if test="create_at != null" >
        create_at = #{create_at,jdbcType=BIGINT},
      </if>
      <if test="create_id != null" >
        create_id = #{create_id,jdbcType=BIGINT},
      </if>
      <if test="update_at != null" >
        update_at = #{update_at,jdbcType=BIGINT},
      </if>
      <if test="update_id != null" >
        update_id = #{update_id,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where wb_lable_id = #{wb_lable_id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zdpzsp.note.bo.WorkBookLabel" >
    update work_book_label
    set user_id = #{user_id,jdbcType=BIGINT},
      parent_id = #{parent_id,jdbcType=BIGINT},
      label_name = #{label_name,jdbcType=VARCHAR},
      label_remark = #{label_remark,jdbcType=VARCHAR},
      res_id = #{res_id,jdbcType=BIGINT},
      is_file = #{is_file,jdbcType=INTEGER},
      create_at = #{create_at,jdbcType=BIGINT},
      create_id = #{create_id,jdbcType=BIGINT},
      update_at = #{update_at,jdbcType=BIGINT},
      update_id = #{update_id,jdbcType=BIGINT},
      state = #{state,jdbcType=INTEGER}
    where wb_lable_id = #{wb_lable_id,jdbcType=BIGINT}
  </update>
</mapper>